{
  "resolvedId": "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/node_modules/.pnpm/element-plus@2.9.5_vue@3.5.13_typescript@5.8.2_/node_modules/element-plus/es/components/loading/src/service.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { nextTick } from 'vue';\nimport { createLoadingComponent } from './loading.mjs';\nimport { isClient } from '@vueuse/core';\nimport { isString } from '@vue/shared';\nimport { getStyle, addClass, removeClass } from '../../../utils/dom/style.mjs';\n\nlet fullscreenInstance = void 0;\nconst Loading = function(options = {}) {\n  if (!isClient)\n    return void 0;\n  const resolved = resolveOptions(options);\n  if (resolved.fullscreen && fullscreenInstance) {\n    return fullscreenInstance;\n  }\n  const instance = createLoadingComponent({\n    ...resolved,\n    closed: () => {\n      var _a;\n      (_a = resolved.closed) == null ? void 0 : _a.call(resolved);\n      if (resolved.fullscreen)\n        fullscreenInstance = void 0;\n    }\n  });\n  addStyle(resolved, resolved.parent, instance);\n  addClassList(resolved, resolved.parent, instance);\n  resolved.parent.vLoadingAddClassList = () => addClassList(resolved, resolved.parent, instance);\n  let loadingNumber = resolved.parent.getAttribute(\"loading-number\");\n  if (!loadingNumber) {\n    loadingNumber = \"1\";\n  } else {\n    loadingNumber = `${Number.parseInt(loadingNumber) + 1}`;\n  }\n  resolved.parent.setAttribute(\"loading-number\", loadingNumber);\n  resolved.parent.appendChild(instance.$el);\n  nextTick(() => instance.visible.value = resolved.visible);\n  if (resolved.fullscreen) {\n    fullscreenInstance = instance;\n  }\n  return instance;\n};\nconst resolveOptions = (options) => {\n  var _a, _b, _c, _d;\n  let target;\n  if (isString(options.target)) {\n    target = (_a = document.querySelector(options.target)) != null ? _a : document.body;\n  } else {\n    target = options.target || document.body;\n  }\n  return {\n    parent: target === document.body || options.body ? document.body : target,\n    background: options.background || \"\",\n    svg: options.svg || \"\",\n    svgViewBox: options.svgViewBox || \"\",\n    spinner: options.spinner || false,\n    text: options.text || \"\",\n    fullscreen: target === document.body && ((_b = options.fullscreen) != null ? _b : true),\n    lock: (_c = options.lock) != null ? _c : false,\n    customClass: options.customClass || \"\",\n    visible: (_d = options.visible) != null ? _d : true,\n    beforeClose: options.beforeClose,\n    closed: options.closed,\n    target\n  };\n};\nconst addStyle = async (options, parent, instance) => {\n  const { nextZIndex } = instance.vm.zIndex || instance.vm._.exposed.zIndex;\n  const maskStyle = {};\n  if (options.fullscreen) {\n    instance.originalPosition.value = getStyle(document.body, \"position\");\n    instance.originalOverflow.value = getStyle(document.body, \"overflow\");\n    maskStyle.zIndex = nextZIndex();\n  } else if (options.parent === document.body) {\n    instance.originalPosition.value = getStyle(document.body, \"position\");\n    await nextTick();\n    for (const property of [\"top\", \"left\"]) {\n      const scroll = property === \"top\" ? \"scrollTop\" : \"scrollLeft\";\n      maskStyle[property] = `${options.target.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] - Number.parseInt(getStyle(document.body, `margin-${property}`), 10)}px`;\n    }\n    for (const property of [\"height\", \"width\"]) {\n      maskStyle[property] = `${options.target.getBoundingClientRect()[property]}px`;\n    }\n  } else {\n    instance.originalPosition.value = getStyle(parent, \"position\");\n  }\n  for (const [key, value] of Object.entries(maskStyle)) {\n    instance.$el.style[key] = value;\n  }\n};\nconst addClassList = (options, parent, instance) => {\n  const ns = instance.vm.ns || instance.vm._.exposed.ns;\n  if (![\"absolute\", \"fixed\", \"sticky\"].includes(instance.originalPosition.value)) {\n    addClass(parent, ns.bm(\"parent\", \"relative\"));\n  } else {\n    removeClass(parent, ns.bm(\"parent\", \"relative\"));\n  }\n  if (options.fullscreen && options.lock) {\n    addClass(parent, ns.bm(\"parent\", \"hidden\"));\n  } else {\n    removeClass(parent, ns.bm(\"parent\", \"hidden\"));\n  }\n};\n\nexport { Loading };\n//# sourceMappingURL=service.mjs.map\n",
      "start": 1741448043415,
      "end": 1741448043547,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "nuxt:server-only-component-transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741448043547,
      "end": 1741448043547,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { nextTick } from \"vue\";\nimport { createLoadingComponent } from \"./loading.mjs\";\nimport { isClient } from \"@vueuse/core\";\nimport { isString } from \"@vue/shared\";\nimport { getStyle, addClass, removeClass } from \"../../../utils/dom/style.mjs\";\nlet fullscreenInstance = void 0;\nconst Loading = function(options = {}) {\n  if (!isClient)\n    return void 0;\n  const resolved = resolveOptions(options);\n  if (resolved.fullscreen && fullscreenInstance) {\n    return fullscreenInstance;\n  }\n  const instance = createLoadingComponent({\n    ...resolved,\n    closed: () => {\n      var _a;\n      (_a = resolved.closed) == null ? void 0 : _a.call(resolved);\n      if (resolved.fullscreen)\n        fullscreenInstance = void 0;\n    }\n  });\n  addStyle(resolved, resolved.parent, instance);\n  addClassList(resolved, resolved.parent, instance);\n  resolved.parent.vLoadingAddClassList = () => addClassList(resolved, resolved.parent, instance);\n  let loadingNumber = resolved.parent.getAttribute(\"loading-number\");\n  if (!loadingNumber) {\n    loadingNumber = \"1\";\n  } else {\n    loadingNumber = `${Number.parseInt(loadingNumber) + 1}`;\n  }\n  resolved.parent.setAttribute(\"loading-number\", loadingNumber);\n  resolved.parent.appendChild(instance.$el);\n  nextTick(() => instance.visible.value = resolved.visible);\n  if (resolved.fullscreen) {\n    fullscreenInstance = instance;\n  }\n  return instance;\n};\nconst resolveOptions = (options) => {\n  var _a, _b, _c, _d;\n  let target;\n  if (isString(options.target)) {\n    target = (_a = (void 0).querySelector(options.target)) != null ? _a : (void 0).body;\n  } else {\n    target = options.target || (void 0).body;\n  }\n  return {\n    parent: target === (void 0).body || options.body ? (void 0).body : target,\n    background: options.background || \"\",\n    svg: options.svg || \"\",\n    svgViewBox: options.svgViewBox || \"\",\n    spinner: options.spinner || false,\n    text: options.text || \"\",\n    fullscreen: target === (void 0).body && ((_b = options.fullscreen) != null ? _b : true),\n    lock: (_c = options.lock) != null ? _c : false,\n    customClass: options.customClass || \"\",\n    visible: (_d = options.visible) != null ? _d : true,\n    beforeClose: options.beforeClose,\n    closed: options.closed,\n    target\n  };\n};\nconst addStyle = async (options, parent, instance) => {\n  const { nextZIndex } = instance.vm.zIndex || instance.vm._.exposed.zIndex;\n  const maskStyle = {};\n  if (options.fullscreen) {\n    instance.originalPosition.value = getStyle((void 0).body, \"position\");\n    instance.originalOverflow.value = getStyle((void 0).body, \"overflow\");\n    maskStyle.zIndex = nextZIndex();\n  } else if (options.parent === (void 0).body) {\n    instance.originalPosition.value = getStyle((void 0).body, \"position\");\n    await nextTick();\n    for (const property of [\"top\", \"left\"]) {\n      const scroll = property === \"top\" ? \"scrollTop\" : \"scrollLeft\";\n      maskStyle[property] = `${options.target.getBoundingClientRect()[property] + (void 0).body[scroll] + (void 0).documentElement[scroll] - Number.parseInt(getStyle((void 0).body, `margin-${property}`), 10)}px`;\n    }\n    for (const property of [\"height\", \"width\"]) {\n      maskStyle[property] = `${options.target.getBoundingClientRect()[property]}px`;\n    }\n  } else {\n    instance.originalPosition.value = getStyle(parent, \"position\");\n  }\n  for (const [key, value] of Object.entries(maskStyle)) {\n    instance.$el.style[key] = value;\n  }\n};\nconst addClassList = (options, parent, instance) => {\n  const ns = instance.vm.ns || instance.vm._.exposed.ns;\n  if (![\"absolute\", \"fixed\", \"sticky\"].includes(instance.originalPosition.value)) {\n    addClass(parent, ns.bm(\"parent\", \"relative\"));\n  } else {\n    removeClass(parent, ns.bm(\"parent\", \"relative\"));\n  }\n  if (options.fullscreen && options.lock) {\n    addClass(parent, ns.bm(\"parent\", \"hidden\"));\n  } else {\n    removeClass(parent, ns.bm(\"parent\", \"hidden\"));\n  }\n};\nexport { Loading };\n",
      "start": 1741448043547,
      "end": 1741448043728,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1741448043728,
      "end": 1741448043728,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741448043728,
      "end": 1741448043728,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741448043728,
      "end": 1741448043728,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741448043728,
      "end": 1741448043728,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741448043728,
      "end": 1741448043728,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448043729,
      "end": 1741448043729,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1741448043729,
      "end": 1741448043730,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741448043730,
      "end": 1741448043730,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1741448043730,
      "end": 1741448043730,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741448043730,
      "end": 1741448043730,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741448043730,
      "end": 1741448043730,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741448043730,
      "end": 1741448043730,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741448043730,
      "end": 1741448043730,
      "order": "normal"
    }
  ]
}
