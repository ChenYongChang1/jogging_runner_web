{
  "resolvedId": "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/node_modules/.pnpm/element-plus@2.9.5_vue@3.5.13_typescript@5.8.2_/node_modules/element-plus/es/components/roving-focus-group/src/utils.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { EVENT_CODE } from '../../../constants/aria.mjs';\n\nconst MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: \"prev\",\n  ArrowUp: \"prev\",\n  ArrowRight: \"next\",\n  ArrowDown: \"next\",\n  PageUp: \"first\",\n  Home: \"first\",\n  PageDown: \"last\",\n  End: \"last\"\n};\nconst getDirectionAwareKey = (key, dir) => {\n  if (dir !== \"rtl\")\n    return key;\n  switch (key) {\n    case EVENT_CODE.right:\n      return EVENT_CODE.left;\n    case EVENT_CODE.left:\n      return EVENT_CODE.right;\n    default:\n      return key;\n  }\n};\nconst getFocusIntent = (event, orientation, dir) => {\n  const key = getDirectionAwareKey(event.code, dir);\n  if (orientation === \"vertical\" && [EVENT_CODE.left, EVENT_CODE.right].includes(key))\n    return void 0;\n  if (orientation === \"horizontal\" && [EVENT_CODE.up, EVENT_CODE.down].includes(key))\n    return void 0;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n};\nconst reorderArray = (array, atIdx) => {\n  return array.map((_, idx) => array[(idx + atIdx) % array.length]);\n};\nconst focusFirst = (elements) => {\n  const { activeElement: prevActive } = document;\n  for (const element of elements) {\n    if (element === prevActive)\n      return;\n    element.focus();\n    if (prevActive !== document.activeElement)\n      return;\n  }\n};\n\nexport { focusFirst, getFocusIntent, reorderArray };\n//# sourceMappingURL=utils.mjs.map\n",
      "start": 1741448044182,
      "end": 1741448044240,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448044240,
      "end": 1741448044240,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448044240,
      "end": 1741448044240,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448044240,
      "end": 1741448044240,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448044240,
      "end": 1741448044240,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448044240,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448044240,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "nuxt:server-only-component-transform",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741448044241,
      "end": 1741448044241,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { EVENT_CODE } from \"../../../constants/aria.mjs\";\nconst MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: \"prev\",\n  ArrowUp: \"prev\",\n  ArrowRight: \"next\",\n  ArrowDown: \"next\",\n  PageUp: \"first\",\n  Home: \"first\",\n  PageDown: \"last\",\n  End: \"last\"\n};\nconst getDirectionAwareKey = (key, dir) => {\n  if (dir !== \"rtl\")\n    return key;\n  switch (key) {\n    case EVENT_CODE.right:\n      return EVENT_CODE.left;\n    case EVENT_CODE.left:\n      return EVENT_CODE.right;\n    default:\n      return key;\n  }\n};\nconst getFocusIntent = (event, orientation, dir) => {\n  const key = getDirectionAwareKey(event.code, dir);\n  if (orientation === \"vertical\" && [EVENT_CODE.left, EVENT_CODE.right].includes(key))\n    return void 0;\n  if (orientation === \"horizontal\" && [EVENT_CODE.up, EVENT_CODE.down].includes(key))\n    return void 0;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n};\nconst reorderArray = (array, atIdx) => {\n  return array.map((_, idx) => array[(idx + atIdx) % array.length]);\n};\nconst focusFirst = (elements) => {\n  const { activeElement: prevActive } = void 0;\n  for (const element of elements) {\n    if (element === prevActive)\n      return;\n    element.focus();\n    if (prevActive !== (void 0).activeElement)\n      return;\n  }\n};\nexport { focusFirst, getFocusIntent, reorderArray };\n",
      "start": 1741448044241,
      "end": 1741448044462,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448044462,
      "end": 1741448044462,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741448044463,
      "end": 1741448044463,
      "order": "normal"
    }
  ]
}
