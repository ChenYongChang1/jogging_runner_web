{
  "resolvedId": "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/src/composables/useFetchRequest.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\n\nimport { useFetch, useRuntimeConfig } from \"#app\";\nimport type { UseFetchOptions } from \"nuxt/app\";\n\ninterface RequestOptions extends UseFetchOptions<any> {\n  customBaseURL?: string;\n}\n\ntype HttpMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\ntype HandleRequestOptions = { request: Request; options: RequestOptions };\ntype HandleResponseOptions = { response: any };\n\n// 请求拦截器\nfunction handleRequest({ options }: HandleRequestOptions) {\n  const { $i18n: i18n } = useNuxtApp();\n  options.headers = {\n    ...options.headers,\n    language: i18n.locale.value,\n    \"Content-Type\": \"application/json\",\n  };\n}\n\n// 响应拦截器\nfunction handleResponse({ response }: HandleResponseOptions) {\n  if (response._data.error) {\n    throw new Error(response._data.error.message);\n  }\n  return response._data;\n}\n\n/**\n * 创建请求方法\n * @param method\n */\nfunction createUseFetchRequest(method: HttpMethod) {\n  return async function (\n    url: string,\n    data?: any,\n    options: RequestOptions = {}\n  ) {\n    const {\n      public: { API_BASE_ENV },\n    } = useRuntimeConfig();\n\n    const baseURL = \"/\" as string;\n    const paramsKey = [];\n    if (method === \"GET\") {\n      for (const i in data) {\n        paramsKey.push(`${i}=${encodeURIComponent(data[i])}`);\n      }\n      data = undefined;\n    }\n    const requestUrl = url; // new URL(url, baseURL).toString();\n    const realUrl =\n      requestUrl + (paramsKey.length ? \"?\" : \"\") + paramsKey.join(\"&\");\n    return await useFetch(realUrl, {\n      ...options,\n      method,\n      body: data,\n      onRequest: handleRequest,\n      onResponse: handleResponse,\n    });\n  };\n}\n\n// 提供 useFetch & HTTP 方法 - 统一管理请求 - 再到组件中使用\nexport const useFetchGet = createUseFetchRequest(\"GET\");\nexport const useFetchPost = createUseFetchRequest(\"POST\");\nexport const useFetchPut = createUseFetchRequest(\"PUT\");\nexport const useFetchDelete = createUseFetchRequest(\"DELETE\");\n",
      "start": 1741448032773,
      "end": 1741448032826,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448032826,
      "end": 1741448032826,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448032826,
      "end": 1741448032827,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448032827,
      "end": 1741448032827,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448032827,
      "end": 1741448032827,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448032827,
      "end": 1741448032827,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741448032827,
      "end": 1741448032827,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { useFetch, useRuntimeConfig } from \"#app\";\nfunction handleRequest({ options }) {\n  const { $i18n: i18n } = useNuxtApp();\n  options.headers = {\n    ...options.headers,\n    language: i18n.locale.value,\n    \"Content-Type\": \"application/json\"\n  };\n}\nfunction handleResponse({ response }) {\n  if (response._data.error) {\n    throw new Error(response._data.error.message);\n  }\n  return response._data;\n}\nfunction createUseFetchRequest(method) {\n  return async function(url, data, options = {}) {\n    const {\n      public: { API_BASE_ENV }\n    } = useRuntimeConfig();\n    const baseURL = \"/\";\n    const paramsKey = [];\n    if (method === \"GET\") {\n      for (const i in data) {\n        paramsKey.push(`${i}=${encodeURIComponent(data[i])}`);\n      }\n      data = void 0;\n    }\n    const requestUrl = url;\n    const realUrl = requestUrl + (paramsKey.length ? \"?\" : \"\") + paramsKey.join(\"&\");\n    return await useFetch(realUrl, {\n      ...options,\n      method,\n      body: data,\n      onRequest: handleRequest,\n      onResponse: handleResponse\n    });\n  };\n}\nexport const useFetchGet = createUseFetchRequest(\"GET\");\nexport const useFetchPost = createUseFetchRequest(\"POST\");\nexport const useFetchPut = createUseFetchRequest(\"PUT\");\nexport const useFetchDelete = createUseFetchRequest(\"DELETE\");\n",
      "start": 1741448032827,
      "end": 1741448034257,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/src/composables/useFetchRequest.ts"
        ],
        "sourcesContent": [
          "\n\nimport { useFetch, useRuntimeConfig } from \"#app\";\nimport type { UseFetchOptions } from \"nuxt/app\";\n\ninterface RequestOptions extends UseFetchOptions<any> {\n  customBaseURL?: string;\n}\n\ntype HttpMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\ntype HandleRequestOptions = { request: Request; options: RequestOptions };\ntype HandleResponseOptions = { response: any };\n\n// 请求拦截器\nfunction handleRequest({ options }: HandleRequestOptions) {\n  const { $i18n: i18n } = useNuxtApp();\n  options.headers = {\n    ...options.headers,\n    language: i18n.locale.value,\n    \"Content-Type\": \"application/json\",\n  };\n}\n\n// 响应拦截器\nfunction handleResponse({ response }: HandleResponseOptions) {\n  if (response._data.error) {\n    throw new Error(response._data.error.message);\n  }\n  return response._data;\n}\n\n/**\n * 创建请求方法\n * @param method\n */\nfunction createUseFetchRequest(method: HttpMethod) {\n  return async function (\n    url: string,\n    data?: any,\n    options: RequestOptions = {}\n  ) {\n    const {\n      public: { API_BASE_ENV },\n    } = useRuntimeConfig();\n\n    const baseURL = \"/\" as string;\n    const paramsKey = [];\n    if (method === \"GET\") {\n      for (const i in data) {\n        paramsKey.push(`${i}=${encodeURIComponent(data[i])}`);\n      }\n      data = undefined;\n    }\n    const requestUrl = url; // new URL(url, baseURL).toString();\n    const realUrl =\n      requestUrl + (paramsKey.length ? \"?\" : \"\") + paramsKey.join(\"&\");\n    return await useFetch(realUrl, {\n      ...options,\n      method,\n      body: data,\n      onRequest: handleRequest,\n      onResponse: handleResponse,\n    });\n  };\n}\n\n// 提供 useFetch & HTTP 方法 - 统一管理请求 - 再到组件中使用\nexport const useFetchGet = createUseFetchRequest(\"GET\");\nexport const useFetchPost = createUseFetchRequest(\"POST\");\nexport const useFetchPut = createUseFetchRequest(\"PUT\");\nexport const useFetchDelete = createUseFetchRequest(\"DELETE\");\n"
        ],
        "mappings": "AAEA,SAAS,UAAU,wBAAwB;AAY3C,SAAS,cAAc,EAAE,QAAQ,GAAyB;AACxD,QAAM,EAAE,OAAO,KAAK,IAAI,WAAW;AACnC,UAAQ,UAAU;AAAA,IAChB,GAAG,QAAQ;AAAA,IACX,UAAU,KAAK,OAAO;AAAA,IACtB,gBAAgB;AAAA,EAClB;AACF;AAGA,SAAS,eAAe,EAAE,SAAS,GAA0B;AAC3D,MAAI,SAAS,MAAM,OAAO;AACxB,UAAM,IAAI,MAAM,SAAS,MAAM,MAAM,OAAO;AAAA,EAC9C;AACA,SAAO,SAAS;AAClB;AAMA,SAAS,sBAAsB,QAAoB;AACjD,SAAO,eACL,KACA,MACA,UAA0B,CAAC,GAC3B;AACA,UAAM;AAAA,MACJ,QAAQ,EAAE,aAAa;AAAA,IACzB,IAAI,iBAAiB;AAErB,UAAM,UAAU;AAChB,UAAM,YAAY,CAAC;AACnB,QAAI,WAAW,OAAO;AACpB,iBAAW,KAAK,MAAM;AACpB,kBAAU,KAAK,GAAG,CAAC,IAAI,mBAAmB,KAAK,CAAC,CAAC,CAAC,EAAE;AAAA,MACtD;AACA,aAAO;AAAA,IACT;AACA,UAAM,aAAa;AACnB,UAAM,UACJ,cAAc,UAAU,SAAS,MAAM,MAAM,UAAU,KAAK,GAAG;AACjE,WAAO,MAAM,SAAS,SAAS;AAAA,MAC7B,GAAG;AAAA,MACH;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAGO,aAAM,cAAc,sBAAsB,KAAK;AAC/C,aAAM,eAAe,sBAAsB,MAAM;AACjD,aAAM,cAAc,sBAAsB,KAAK;AAC/C,aAAM,iBAAiB,sBAAsB,QAAQ;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1741448034257,
      "end": 1741448034257,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1741448034258,
      "end": 1741448034258,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741448034258,
      "end": 1741448034258,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741448034258,
      "end": 1741448034258,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741448034258,
      "end": 1741448034258,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741448034258,
      "end": 1741448034258,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741448034258,
      "end": 1741448034258,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "import { useFetch, useRuntimeConfig } from \"#app\";\nfunction handleRequest({ options }) {\n  const { $i18n: i18n } = useNuxtApp();\n  options.headers = {\n    ...options.headers,\n    language: i18n.locale.value,\n    \"Content-Type\": \"application/json\"\n  };\n}\nfunction handleResponse({ response }) {\n  if (response._data.error) {\n    throw new Error(response._data.error.message);\n  }\n  return response._data;\n}\nfunction createUseFetchRequest(method) {\n  return async function(url, data, options = {}) {\n    const {\n      public: { API_BASE_ENV }\n    } = useRuntimeConfig();\n    const baseURL = \"/\";\n    const paramsKey = [];\n    if (method === \"GET\") {\n      for (const i in data) {\n        paramsKey.push(`${i}=${encodeURIComponent(data[i])}`);\n      }\n      data = void 0;\n    }\n    const requestUrl = url;\n    const realUrl = requestUrl + (paramsKey.length ? \"?\" : \"\") + paramsKey.join(\"&\");\n    return await useFetch(realUrl, {\n      ...options,\n      method,\n      body: data,\n      onRequest: handleRequest,\n      onResponse: handleResponse\n    }, '$UaGffI9xll');\n  };\n}\nexport const useFetchGet = createUseFetchRequest(\"GET\");\nexport const useFetchPost = createUseFetchRequest(\"POST\");\nexport const useFetchPut = createUseFetchRequest(\"PUT\");\nexport const useFetchDelete = createUseFetchRequest(\"DELETE\");\n",
      "start": 1741448034258,
      "end": 1741448034260,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC;AACH;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,gBAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448034260,
      "end": 1741448034260,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useFetch, useRuntimeConfig } from \"#app\";\n\nimport { useNuxtApp } from '#app/nuxt';\nfunction handleRequest({ options }) {\n  const { $i18n: i18n } = useNuxtApp();\n  options.headers = {\n    ...options.headers,\n    language: i18n.locale.value,\n    \"Content-Type\": \"application/json\"\n  };\n}\nfunction handleResponse({ response }) {\n  if (response._data.error) {\n    throw new Error(response._data.error.message);\n  }\n  return response._data;\n}\nfunction createUseFetchRequest(method) {\n  return async function(url, data, options = {}) {\n    const {\n      public: { API_BASE_ENV }\n    } = useRuntimeConfig();\n    const baseURL = \"/\";\n    const paramsKey = [];\n    if (method === \"GET\") {\n      for (const i in data) {\n        paramsKey.push(`${i}=${encodeURIComponent(data[i])}`);\n      }\n      data = void 0;\n    }\n    const requestUrl = url;\n    const realUrl = requestUrl + (paramsKey.length ? \"?\" : \"\") + paramsKey.join(\"&\");\n    return await useFetch(realUrl, {\n      ...options,\n      method,\n      body: data,\n      onRequest: handleRequest,\n      onResponse: handleResponse\n    }, '$UaGffI9xll');\n  };\n}\nexport const useFetchGet = createUseFetchRequest(\"GET\");\nexport const useFetchPost = createUseFetchRequest(\"POST\");\nexport const useFetchPut = createUseFetchRequest(\"PUT\");\nexport const useFetchDelete = createUseFetchRequest(\"DELETE\");\n",
      "start": 1741448034260,
      "end": 1741448034262,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC;AACH;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1741448034262,
      "end": 1741448034262,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448034262,
      "end": 1741448034262,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741448034262,
      "end": 1741448034262,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1741448034262,
      "end": 1741448034262,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741448034262,
      "end": 1741448034262,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741448034263,
      "end": 1741448034263,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741448034263,
      "end": 1741448034263,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741448034263,
      "end": 1741448034263,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741448034263,
      "end": 1741448034263,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741448034263,
      "end": 1741448034263,
      "order": "normal"
    }
  ]
}
