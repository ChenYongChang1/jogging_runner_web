{
  "resolvedId": "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/node_modules/.pnpm/@unhead+vue@1.11.20_vue@3.5.13_typescript@5.8.2_/node_modules/@unhead/vue/dist/shared/vue.ziyDaVMR.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createServerHead as createServerHead$1, createHead as createHead$1, getActiveHead } from 'unhead';\nimport { version, unref, nextTick, inject } from 'vue';\nimport { defineHeadPlugin } from '@unhead/shared';\n\nconst Vue3 = version[0] === \"3\";\n\nfunction resolveUnref(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nfunction resolveUnrefHeadInput(ref) {\n  if (ref instanceof Promise || ref instanceof Date || ref instanceof RegExp)\n    return ref;\n  const root = resolveUnref(ref);\n  if (!ref || !root)\n    return root;\n  if (Array.isArray(root))\n    return root.map((r) => resolveUnrefHeadInput(r));\n  if (typeof root === \"object\") {\n    const resolved = {};\n    for (const k in root) {\n      if (!Object.prototype.hasOwnProperty.call(root, k)) {\n        continue;\n      }\n      if (k === \"titleTemplate\" || k[0] === \"o\" && k[1] === \"n\") {\n        resolved[k] = unref(root[k]);\n        continue;\n      }\n      resolved[k] = resolveUnrefHeadInput(root[k]);\n    }\n    return resolved;\n  }\n  return root;\n}\n\nconst VueReactivityPlugin = defineHeadPlugin({\n  hooks: {\n    \"entries:resolve\": (ctx) => {\n      for (const entry of ctx.entries)\n        entry.resolvedInput = resolveUnrefHeadInput(entry.input);\n    }\n  }\n});\n\nconst headSymbol = \"usehead\";\nfunction vueInstall(head) {\n  const plugin = {\n    install(app) {\n      if (Vue3) {\n        app.config.globalProperties.$unhead = head;\n        app.config.globalProperties.$head = head;\n        app.provide(headSymbol, head);\n      }\n    }\n  };\n  return plugin.install;\n}\nfunction createServerHead(options = {}) {\n  const head = createServerHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\nfunction createHead(options = {}) {\n  options.domDelayFn = options.domDelayFn || ((fn) => nextTick(() => setTimeout(() => fn(), 0)));\n  const head = createHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__unhead_injection_handler__\";\nfunction setHeadInjectionHandler(handler) {\n  _global[globalKey] = handler;\n}\nfunction injectHead() {\n  if (globalKey in _global) {\n    return _global[globalKey]();\n  }\n  const head = inject(headSymbol);\n  if (!head && process.env.NODE_ENV !== \"production\")\n    console.warn(\"Unhead is missing Vue context, falling back to shared context. This may have unexpected results.\");\n  return head || getActiveHead();\n}\n\nexport { Vue3 as V, createServerHead as a, createHead as c, headSymbol as h, injectHead as i, resolveUnrefHeadInput as r, setHeadInjectionHandler as s };\n",
      "start": 1741448029372,
      "end": 1741448030302,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741448030303,
      "end": 1741448030303,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448030303,
      "end": 1741448030304,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448030304,
      "end": 1741448030304,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448030304,
      "end": 1741448030304,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448030304,
      "end": 1741448030304,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741448030304,
      "end": 1741448030304,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createServerHead as createServerHead$1, createHead as createHead$1, getActiveHead } from \"unhead\";\nimport { version, unref, nextTick, inject } from \"vue\";\nimport { defineHeadPlugin } from \"@unhead/shared\";\nconst Vue3 = version[0] === \"3\";\nfunction resolveUnref(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nfunction resolveUnrefHeadInput(ref) {\n  if (ref instanceof Promise || ref instanceof Date || ref instanceof RegExp)\n    return ref;\n  const root = resolveUnref(ref);\n  if (!ref || !root)\n    return root;\n  if (Array.isArray(root))\n    return root.map((r) => resolveUnrefHeadInput(r));\n  if (typeof root === \"object\") {\n    const resolved = {};\n    for (const k in root) {\n      if (!Object.prototype.hasOwnProperty.call(root, k)) {\n        continue;\n      }\n      if (k === \"titleTemplate\" || k[0] === \"o\" && k[1] === \"n\") {\n        resolved[k] = unref(root[k]);\n        continue;\n      }\n      resolved[k] = resolveUnrefHeadInput(root[k]);\n    }\n    return resolved;\n  }\n  return root;\n}\nconst VueReactivityPlugin = defineHeadPlugin({\n  hooks: {\n    \"entries:resolve\": (ctx) => {\n      for (const entry of ctx.entries)\n        entry.resolvedInput = resolveUnrefHeadInput(entry.input);\n    }\n  }\n});\nconst headSymbol = \"usehead\";\nfunction vueInstall(head) {\n  const plugin = {\n    install(app) {\n      if (Vue3) {\n        app.config.globalProperties.$unhead = head;\n        app.config.globalProperties.$head = head;\n        app.provide(headSymbol, head);\n      }\n    }\n  };\n  return plugin.install;\n}\nfunction createServerHead(options = {}) {\n  const head = createServerHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\nfunction createHead(options = {}) {\n  options.domDelayFn = options.domDelayFn || ((fn) => nextTick(() => setTimeout(() => fn(), 0)));\n  const head = createHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__unhead_injection_handler__\";\nfunction setHeadInjectionHandler(handler) {\n  _global[globalKey] = handler;\n}\nfunction injectHead() {\n  if (globalKey in _global) {\n    return _global[globalKey]();\n  }\n  const head = inject(headSymbol);\n  if (!head && false)\n    console.warn(\"Unhead is missing Vue context, falling back to shared context. This may have unexpected results.\");\n  return head || getActiveHead();\n}\nexport { Vue3 as V, createServerHead as a, createHead as c, headSymbol as h, injectHead as i, resolveUnrefHeadInput as r, setHeadInjectionHandler as s };\n",
      "start": 1741448030304,
      "end": 1741448031694,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1741448031694,
      "end": 1741448031694,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741448031694,
      "end": 1741448031694,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741448031694,
      "end": 1741448031694,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741448031695,
      "end": 1741448031695,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741448031696,
      "end": 1741448031696,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741448031696,
      "end": 1741448031696,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448031700,
      "end": 1741448031700,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448031700,
      "end": 1741448031700,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448031701,
      "end": 1741448031701,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448031702,
      "end": 1741448031702,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448031704,
      "end": 1741448031704,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741448031705,
      "end": 1741448031705,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1741448031705,
      "end": 1741448031705,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741448031705,
      "end": 1741448031705,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741448031705,
      "end": 1741448031705,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741448031705,
      "end": 1741448031705,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741448031706,
      "end": 1741448031706,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741448031706,
      "end": 1741448031706,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741448031707,
      "end": 1741448031707,
      "order": "normal"
    }
  ]
}
