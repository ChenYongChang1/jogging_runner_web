{
  "resolvedId": "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/node_modules/.pnpm/element-plus@2.9.5_vue@3.5.13_typescript@5.8.2_/node_modules/element-plus/es/components/drawer/src/drawer2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, useSlots, computed, ref, openBlock, createBlock, unref, withCtx, createVNode, Transition, withDirectives, createElementVNode, mergeProps, withModifiers, normalizeClass, createElementBlock, renderSlot, toDisplayString, createCommentVNode, vShow } from 'vue';\nimport { Close } from '@element-plus/icons-vue';\nimport { ElOverlay } from '../../overlay/index.mjs';\nimport ElFocusTrap from '../../focus-trap/src/focus-trap.mjs';\nimport { ElTeleport } from '../../teleport/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { drawerProps, drawerEmits } from './drawer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useDialog } from '../../dialog/src/use-dialog.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElDrawer\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: drawerProps,\n  emits: drawerEmits,\n  setup(__props, { expose }) {\n    const props = __props;\n    const slots = useSlots();\n    useDeprecated({\n      scope: \"el-drawer\",\n      from: \"the title slot\",\n      replacement: \"the header slot\",\n      version: \"3.0.0\",\n      ref: \"https://element-plus.org/en-US/component/drawer.html#slots\"\n    }, computed(() => !!slots.title));\n    const drawerRef = ref();\n    const focusStartRef = ref();\n    const ns = useNamespace(\"drawer\");\n    const { t } = useLocale();\n    const {\n      afterEnter,\n      afterLeave,\n      beforeLeave,\n      visible,\n      rendered,\n      titleId,\n      bodyId,\n      zIndex,\n      onModalClick,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      onFocusoutPrevented,\n      onCloseRequested,\n      handleClose\n    } = useDialog(props, drawerRef);\n    const isHorizontal = computed(() => props.direction === \"rtl\" || props.direction === \"ltr\");\n    const drawerSize = computed(() => addUnit(props.size));\n    expose({\n      handleClose,\n      afterEnter,\n      afterLeave\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElTeleport), {\n        to: _ctx.appendTo,\n        disabled: _ctx.appendTo !== \"body\" ? false : !_ctx.appendToBody\n      }, {\n        default: withCtx(() => [\n          createVNode(Transition, {\n            name: unref(ns).b(\"fade\"),\n            onAfterEnter: unref(afterEnter),\n            onAfterLeave: unref(afterLeave),\n            onBeforeLeave: unref(beforeLeave),\n            persisted: \"\"\n          }, {\n            default: withCtx(() => [\n              withDirectives(createVNode(unref(ElOverlay), {\n                mask: _ctx.modal,\n                \"overlay-class\": _ctx.modalClass,\n                \"z-index\": unref(zIndex),\n                onClick: unref(onModalClick)\n              }, {\n                default: withCtx(() => [\n                  createVNode(unref(ElFocusTrap), {\n                    loop: \"\",\n                    trapped: unref(visible),\n                    \"focus-trap-el\": drawerRef.value,\n                    \"focus-start-el\": focusStartRef.value,\n                    onFocusAfterTrapped: unref(onOpenAutoFocus),\n                    onFocusAfterReleased: unref(onCloseAutoFocus),\n                    onFocusoutPrevented: unref(onFocusoutPrevented),\n                    onReleaseRequested: unref(onCloseRequested)\n                  }, {\n                    default: withCtx(() => [\n                      createElementVNode(\"div\", mergeProps({\n                        ref_key: \"drawerRef\",\n                        ref: drawerRef,\n                        \"aria-modal\": \"true\",\n                        \"aria-label\": _ctx.title || void 0,\n                        \"aria-labelledby\": !_ctx.title ? unref(titleId) : void 0,\n                        \"aria-describedby\": unref(bodyId)\n                      }, _ctx.$attrs, {\n                        class: [unref(ns).b(), _ctx.direction, unref(visible) && \"open\"],\n                        style: unref(isHorizontal) ? \"width: \" + unref(drawerSize) : \"height: \" + unref(drawerSize),\n                        role: \"dialog\",\n                        onClick: withModifiers(() => {\n                        }, [\"stop\"])\n                      }), [\n                        createElementVNode(\"span\", {\n                          ref_key: \"focusStartRef\",\n                          ref: focusStartRef,\n                          class: normalizeClass(unref(ns).e(\"sr-focus\")),\n                          tabindex: \"-1\"\n                        }, null, 2),\n                        _ctx.withHeader ? (openBlock(), createElementBlock(\"header\", {\n                          key: 0,\n                          class: normalizeClass([unref(ns).e(\"header\"), _ctx.headerClass])\n                        }, [\n                          !_ctx.$slots.title ? renderSlot(_ctx.$slots, \"header\", {\n                            key: 0,\n                            close: unref(handleClose),\n                            titleId: unref(titleId),\n                            titleClass: unref(ns).e(\"title\")\n                          }, () => [\n                            !_ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n                              key: 0,\n                              id: unref(titleId),\n                              role: \"heading\",\n                              \"aria-level\": _ctx.headerAriaLevel,\n                              class: normalizeClass(unref(ns).e(\"title\"))\n                            }, toDisplayString(_ctx.title), 11, [\"id\", \"aria-level\"])) : createCommentVNode(\"v-if\", true)\n                          ]) : renderSlot(_ctx.$slots, \"title\", { key: 1 }, () => [\n                            createCommentVNode(\" DEPRECATED SLOT \")\n                          ]),\n                          _ctx.showClose ? (openBlock(), createElementBlock(\"button\", {\n                            key: 2,\n                            \"aria-label\": unref(t)(\"el.drawer.close\"),\n                            class: normalizeClass(unref(ns).e(\"close-btn\")),\n                            type: \"button\",\n                            onClick: unref(handleClose)\n                          }, [\n                            createVNode(unref(ElIcon), {\n                              class: normalizeClass(unref(ns).e(\"close\"))\n                            }, {\n                              default: withCtx(() => [\n                                createVNode(unref(Close))\n                              ]),\n                              _: 1\n                            }, 8, [\"class\"])\n                          ], 10, [\"aria-label\", \"onClick\"])) : createCommentVNode(\"v-if\", true)\n                        ], 2)) : createCommentVNode(\"v-if\", true),\n                        unref(rendered) ? (openBlock(), createElementBlock(\"div\", {\n                          key: 1,\n                          id: unref(bodyId),\n                          class: normalizeClass([unref(ns).e(\"body\"), _ctx.bodyClass])\n                        }, [\n                          renderSlot(_ctx.$slots, \"default\")\n                        ], 10, [\"id\"])) : createCommentVNode(\"v-if\", true),\n                        _ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n                          key: 2,\n                          class: normalizeClass([unref(ns).e(\"footer\"), _ctx.footerClass])\n                        }, [\n                          renderSlot(_ctx.$slots, \"footer\")\n                        ], 2)) : createCommentVNode(\"v-if\", true)\n                      ], 16, [\"aria-label\", \"aria-labelledby\", \"aria-describedby\", \"onClick\"])\n                    ]),\n                    _: 3\n                  }, 8, [\"trapped\", \"focus-trap-el\", \"focus-start-el\", \"onFocusAfterTrapped\", \"onFocusAfterReleased\", \"onFocusoutPrevented\", \"onReleaseRequested\"])\n                ]),\n                _: 3\n              }, 8, [\"mask\", \"overlay-class\", \"z-index\", \"onClick\"]), [\n                [vShow, unref(visible)]\n              ])\n            ]),\n            _: 3\n          }, 8, [\"name\", \"onAfterEnter\", \"onAfterLeave\", \"onBeforeLeave\"])\n        ]),\n        _: 3\n      }, 8, [\"to\", \"disabled\"]);\n    };\n  }\n});\nvar Drawer = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"drawer.vue\"]]);\n\nexport { Drawer as default };\n//# sourceMappingURL=drawer2.mjs.map\n",
      "start": 1741448034391,
      "end": 1741448034568,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448034568,
      "end": 1741448034568,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448034568,
      "end": 1741448034568,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448034568,
      "end": 1741448034569,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741448034569,
      "end": 1741448034569,
      "order": "normal"
    }
  ]
}
