{
  "resolvedId": "/Users/chenyongchang/lib/outsource/hz/ultra_jogging_web/node_modules/.pnpm/nuxt@3.15.4_@parcel+watcher@2.5.1_@types+node@22.13.9_db0@0.2.4_eslint@9.21.0_jiti@2.4._dff270f4def6dc5620d973dea8099f72/node_modules/nuxt/dist/app/composables/preview.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { toRef, watch } from \"vue\";\nimport { useState } from \"./state.js\";\nimport { refreshNuxtData } from \"./asyncData.js\";\nimport { useRoute, useRouter } from \"./router.js\";\nlet unregisterRefreshHook;\nexport function usePreviewMode(options = {}) {\n  const preview = useState(\"_preview-state\", () => ({\n    enabled: false,\n    state: {}\n  }));\n  if (preview.value._initialized) {\n    return {\n      enabled: toRef(preview.value, \"enabled\"),\n      state: preview.value.state\n    };\n  }\n  if (import.meta.client) {\n    preview.value._initialized = true;\n  }\n  if (!preview.value.enabled) {\n    const shouldEnable = options.shouldEnable ?? defaultShouldEnable;\n    const result = shouldEnable(preview.value.state);\n    if (typeof result === \"boolean\") {\n      preview.value.enabled = result;\n    }\n  }\n  watch(() => preview.value.enabled, (value) => {\n    if (value) {\n      const getState = options.getState ?? getDefaultState;\n      const newState = getState(preview.value.state);\n      if (newState !== preview.value.state) {\n        Object.assign(preview.value.state, newState);\n      }\n      if (import.meta.client && !unregisterRefreshHook) {\n        const onEnable = options.onEnable ?? refreshNuxtData;\n        onEnable();\n        unregisterRefreshHook = options.onDisable ?? useRouter().afterEach(() => refreshNuxtData());\n      }\n    } else if (unregisterRefreshHook) {\n      unregisterRefreshHook();\n      unregisterRefreshHook = void 0;\n    }\n  }, { immediate: true, flush: \"sync\" });\n  return {\n    enabled: toRef(preview.value, \"enabled\"),\n    state: preview.value.state\n  };\n}\nfunction defaultShouldEnable() {\n  const route = useRoute();\n  const previewQueryName = \"preview\";\n  return route.query[previewQueryName] === \"true\";\n}\nfunction getDefaultState(state) {\n  if (state.token !== void 0) {\n    return state;\n  }\n  const route = useRoute();\n  state.token = Array.isArray(route.query.token) ? route.query.token[0] : route.query.token;\n  return state;\n}\n",
      "start": 1741448031247,
      "end": 1741448031324,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:resource",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n:directive",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "nuxt:prehydrate-transform",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { toRef, watch } from \"vue\";\nimport { useState } from \"./state.js\";\nimport { refreshNuxtData } from \"./asyncData.js\";\nimport { useRoute, useRouter } from \"./router.js\";\nlet unregisterRefreshHook;\nexport function usePreviewMode(options = {}) {\n  const preview = useState(\"_preview-state\", () => ({\n    enabled: false,\n    state: {}\n  }));\n  if (preview.value._initialized) {\n    return {\n      enabled: toRef(preview.value, \"enabled\"),\n      state: preview.value.state\n    };\n  }\n  if (true) {\n    preview.value._initialized = true;\n  }\n  if (!preview.value.enabled) {\n    const shouldEnable = options.shouldEnable ?? defaultShouldEnable;\n    const result = shouldEnable(preview.value.state);\n    if (typeof result === \"boolean\") {\n      preview.value.enabled = result;\n    }\n  }\n  watch(() => preview.value.enabled, (value) => {\n    if (value) {\n      const getState = options.getState ?? getDefaultState;\n      const newState = getState(preview.value.state);\n      if (newState !== preview.value.state) {\n        Object.assign(preview.value.state, newState);\n      }\n      if (true && !unregisterRefreshHook) {\n        const onEnable = options.onEnable ?? refreshNuxtData;\n        onEnable();\n        unregisterRefreshHook = options.onDisable ?? useRouter().afterEach(() => refreshNuxtData());\n      }\n    } else if (unregisterRefreshHook) {\n      unregisterRefreshHook();\n      unregisterRefreshHook = void 0;\n    }\n  }, { immediate: true, flush: \"sync\" });\n  return {\n    enabled: toRef(preview.value, \"enabled\"),\n    state: preview.value.state\n  };\n}\nfunction defaultShouldEnable() {\n  const route = useRoute();\n  const previewQueryName = \"preview\";\n  return route.query[previewQueryName] === \"true\";\n}\nfunction getDefaultState(state) {\n  if (state.token !== void 0) {\n    return state;\n  }\n  const route = useRoute();\n  state.token = Array.isArray(route.query.token) ? route.query.token[0] : route.query.token;\n  return state;\n}\n",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClkB,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClnG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AACH;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChd;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1741448031324,
      "end": 1741448031324,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1741448031324,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1741448031325,
      "end": 1741448031325,
      "order": "normal"
    }
  ]
}
